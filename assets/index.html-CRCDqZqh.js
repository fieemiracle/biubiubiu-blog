import{_ as d,c as r,e as t,b as h,a as s,w as a,d as k,r as p,o as c}from"./app-Bo1vGDNN.js";const g={};function u(v,i){const l=p("CodeTabs");return c(),r("div",null,[i[10]||(i[10]=t('<h2 id="_1、安装rustup" tabindex="-1"><a class="header-anchor" href="#_1、安装rustup"><span>1、安装rustup</span></a></h2><p><code>Rust</code>将编译和运行行为分为两个单独的步骤。<code>Rust</code>是一种<strong>预编译静态类型（ahead-of-time compiled）语言</strong>。可以编译程序，并且将可执行文件送人，可执行文件的运行甚至不需要安装<code>Rust</code>。 仅仅使用<code>rustc</code>编译简单程序是没问题的，但是随着项目的增长，还需要管理项目的方方面面，并且让项目代码易于分享，所以还需要一个叫<code>Cargo</code>的工具，能够编写真实世界的<code>Rust</code>程序</p>',2)),h(l,{id:"6",data:[{id:"macOS&Linux"},{id:"window"}]},{title0:a(({value:n,isActive:e})=>[...i[0]||(i[0]=[s("span",null,"macOS&Linux",-1)])]),title1:a(({value:n,isActive:e})=>[...i[1]||(i[1]=[s("span",null,"window",-1)])]),tab0:a(({value:n,isActive:e})=>[...i[2]||(i[2]=[s("div",{class:"language-shell line-numbers-mode","data-highlighter":"shiki","data-ext":"shell",style:{"--shiki-light":"#393a34","--shiki-dark":"#dbd7caee","--shiki-light-bg":"#ffffff","--shiki-dark-bg":"#121212"}},[s("pre",{class:"shiki shiki-themes vitesse-light vitesse-dark vp-code"},[s("code",{class:"language-shell"},[s("span",{class:"line"},[s("span",{style:{"--shiki-light":"#59873A","--shiki-dark":"#80A665"}},"curl"),s("span",{style:{"--shiki-light":"#A65E2B","--shiki-dark":"#C99076"}}," --proto"),s("span",{style:{"--shiki-light":"#B5695977","--shiki-dark":"#C98A7D77"}}," '"),s("span",{style:{"--shiki-light":"#B56959","--shiki-dark":"#C98A7D"}},"=https"),s("span",{style:{"--shiki-light":"#B5695977","--shiki-dark":"#C98A7D77"}},"'"),s("span",{style:{"--shiki-light":"#A65E2B","--shiki-dark":"#C99076"}}," --tlsv1.2"),s("span",{style:{"--shiki-light":"#B56959","--shiki-dark":"#C98A7D"}}," https://sh.rustup.rs"),s("span",{style:{"--shiki-light":"#A65E2B","--shiki-dark":"#C99076"}}," -sSf"),s("span",{style:{"--shiki-light":"#AB5959","--shiki-dark":"#CB7676"}}," |"),s("span",{style:{"--shiki-light":"#59873A","--shiki-dark":"#80A665"}}," sh")])])]),s("div",{class:"line-numbers","aria-hidden":"true",style:{"counter-reset":"line-number 0"}},[s("div",{class:"line-number"})])],-1)])]),tab1:a(({value:n,isActive:e})=>[...i[3]||(i[3]=[s("div",{class:"language-shell line-numbers-mode","data-highlighter":"shiki","data-ext":"shell",style:{"--shiki-light":"#393a34","--shiki-dark":"#dbd7caee","--shiki-light-bg":"#ffffff","--shiki-dark-bg":"#121212"}},[s("pre",{class:"shiki shiki-themes vitesse-light vitesse-dark vp-code"},[s("code",{class:"language-shell"},[s("span",{class:"line"},[s("span",{style:{"--shiki-light":"#A0ADA0","--shiki-dark":"#758575DD"}},"# 前往 https://www.rust-lang.org/install.html 按照说明安装Rust")])])]),s("div",{class:"line-numbers","aria-hidden":"true",style:{"counter-reset":"line-number 0"}},[s("div",{class:"line-number"})])],-1)])]),_:1}),i[11]||(i[11]=s("h2",{id:"_2、安装链接器",tabindex:"-1"},[s("a",{class:"header-anchor",href:"#_2、安装链接器"},[s("span",null,"2、安装链接器")])],-1)),i[12]||(i[12]=s("p",null,[s("strong",null,"链接器(linker)"),k(" 是Rust用来将其编译的输出链接成一个文件的程序 在macOS上安装一个C编译器，它通常包括一个链接器。一些常见的Rust包依赖于C代码")],-1)),h(l,{id:"20",data:[{id:"macOS"},{id:"Linux"},{id:"Ubuntu"}]},{title0:a(({value:n,isActive:e})=>[...i[4]||(i[4]=[s("span",null,"macOS",-1)])]),title1:a(({value:n,isActive:e})=>[...i[5]||(i[5]=[s("span",null,"Linux",-1)])]),title2:a(({value:n,isActive:e})=>[...i[6]||(i[6]=[s("span",null,"Ubuntu",-1)])]),tab0:a(({value:n,isActive:e})=>[...i[7]||(i[7]=[s("div",{class:"language-shell line-numbers-mode","data-highlighter":"shiki","data-ext":"shell",style:{"--shiki-light":"#393a34","--shiki-dark":"#dbd7caee","--shiki-light-bg":"#ffffff","--shiki-dark-bg":"#121212"}},[s("pre",{class:"shiki shiki-themes vitesse-light vitesse-dark vp-code"},[s("code",{class:"language-shell"},[s("span",{class:"line"},[s("span",{style:{"--shiki-light":"#59873A","--shiki-dark":"#80A665"}},"xcode-select"),s("span",{style:{"--shiki-light":"#A65E2B","--shiki-dark":"#C99076"}}," --install")])])]),s("div",{class:"line-numbers","aria-hidden":"true",style:{"counter-reset":"line-number 0"}},[s("div",{class:"line-number"})])],-1)])]),tab1:a(({value:n,isActive:e})=>[...i[8]||(i[8]=[s("div",{class:"language-shell line-numbers-mode","data-highlighter":"shiki","data-ext":"shell",style:{"--shiki-light":"#393a34","--shiki-dark":"#dbd7caee","--shiki-light-bg":"#ffffff","--shiki-dark-bg":"#121212"}},[s("pre",{class:"shiki shiki-themes vitesse-light vitesse-dark vp-code"},[s("code",{class:"language-shell"},[s("span",{class:"line"},[s("span",{style:{"--shiki-light":"#A0ADA0","--shiki-dark":"#758575DD"}},"# 根据发行版（distribution）文档安装 GCC 或 Clang")])])]),s("div",{class:"line-numbers","aria-hidden":"true",style:{"counter-reset":"line-number 0"}},[s("div",{class:"line-number"})])],-1)])]),tab2:a(({value:n,isActive:e})=>[...i[9]||(i[9]=[s("div",{class:"language-shell line-numbers-mode","data-highlighter":"shiki","data-ext":"shell",style:{"--shiki-light":"#393a34","--shiki-dark":"#dbd7caee","--shiki-light-bg":"#ffffff","--shiki-dark-bg":"#121212"}},[s("pre",{class:"shiki shiki-themes vitesse-light vitesse-dark vp-code"},[s("code",{class:"language-shell"},[s("span",{class:"line"},[s("span",{style:{"--shiki-light":"#A0ADA0","--shiki-dark":"#758575DD"}},"# 安装 build-essential 包")])])]),s("div",{class:"line-numbers","aria-hidden":"true",style:{"counter-reset":"line-number 0"}},[s("div",{class:"line-number"})])],-1)])]),_:1}),i[13]||(i[13]=t(`<h2 id="_3、rust命令使用" tabindex="-1"><a class="header-anchor" href="#_3、rust命令使用"><span>3、rust命令使用</span></a></h2><div class="language-shell line-numbers-mode" data-highlighter="shiki" data-ext="shell" style="--shiki-light:#393a34;--shiki-dark:#dbd7caee;--shiki-light-bg:#ffffff;--shiki-dark-bg:#121212;"><pre class="shiki shiki-themes vitesse-light vitesse-dark vp-code"><code class="language-shell"><span class="line"><span style="--shiki-light:#A0ADA0;--shiki-dark:#758575DD;"># 检查是否正确安装</span></span>
<span class="line"><span style="--shiki-light:#59873A;--shiki-dark:#80A665;">rustc</span><span style="--shiki-light:#A65E2B;--shiki-dark:#C99076;"> --version</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#998418;--shiki-dark:#B8A965;">echo</span><span style="--shiki-light:#B07D48;--shiki-dark:#BD976A;"> $PATH</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#A0ADA0;--shiki-dark:#758575DD;"># 更新</span></span>
<span class="line"><span style="--shiki-light:#59873A;--shiki-dark:#80A665;">rustup</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;"> update</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#A0ADA0;--shiki-dark:#758575DD;"># 删除</span></span>
<span class="line"><span style="--shiki-light:#59873A;--shiki-dark:#80A665;">rustup</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;"> self</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;"> uninstall</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#A0ADA0;--shiki-dark:#758575DD;"># 运行</span></span>
<span class="line"><span style="--shiki-light:#59873A;--shiki-dark:#80A665;">rustc</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;"> xxx.rs</span><span style="--shiki-light:#A0ADA0;--shiki-dark:#758575DD;"> # 编译</span></span>
<span class="line"><span style="--shiki-light:#59873A;--shiki-dark:#80A665;">./xxx.rs</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#A0ADA0;--shiki-dark:#758575DD;"># 如果rustc --version已经成功显示rustup的版本，但是rustc --version在某些地方仍然不生效时</span></span>
<span class="line"><span style="--shiki-light:#998418;--shiki-dark:#B8A965;">source</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;"> ~/.cargo/env</span></span>
<span class="line"><span style="--shiki-light:#998418;--shiki-dark:#B8A965;">source</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;"> ~/.zshrc</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="_4、初体验" tabindex="-1"><a class="header-anchor" href="#_4、初体验"><span>4、初体验</span></a></h2><div class="hint-container tip"><p class="hint-container-title">first.rs</p><div class="language-rust line-numbers-mode" data-highlighter="shiki" data-ext="rust" style="--shiki-light:#393a34;--shiki-dark:#dbd7caee;--shiki-light-bg:#ffffff;--shiki-dark-bg:#121212;"><pre class="shiki shiki-themes vitesse-light vitesse-dark vp-code"><code class="language-rust"><span class="line"><span style="--shiki-light:#1E754F;--shiki-dark:#4D9375;">fn</span><span style="--shiki-light:#59873A;--shiki-dark:#80A665;"> main</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">()</span><span style="--shiki-light:#999999;--shiki-dark:#666666;"> {</span></span>
<span class="line"><span style="--shiki-light:#59873A;--shiki-dark:#80A665;">  println!</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">(</span><span style="--shiki-light:#B5695977;--shiki-dark:#C98A7D77;">&quot;</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;">Hello, world!</span><span style="--shiki-light:#B5695977;--shiki-dark:#C98A7D77;">&quot;</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">);</span></span>
<span class="line"><span style="--shiki-light:#999999;--shiki-dark:#666666;">}</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#A0ADA0;--shiki-dark:#758575DD;">// rustc first.rs</span></span>
<span class="line"><span style="--shiki-light:#A0ADA0;--shiki-dark:#758575DD;">// ./first</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></div><h2 id="cargo" tabindex="-1"><a class="header-anchor" href="#cargo"><span><a href="https://doc.rust-lang.org/cargo" target="_blank" rel="noopener noreferrer">Cargo</a></span></a></h2><p><code>Cargo</code>是<code>Rust</code>的构建系统和包管理器</p><div class="language-shell line-numbers-mode" data-highlighter="shiki" data-ext="shell" style="--shiki-light:#393a34;--shiki-dark:#dbd7caee;--shiki-light-bg:#ffffff;--shiki-dark-bg:#121212;"><pre class="shiki shiki-themes vitesse-light vitesse-dark vp-code"><code class="language-shell"><span class="line"><span style="--shiki-light:#59873A;--shiki-dark:#80A665;">cargo</span><span style="--shiki-light:#A65E2B;--shiki-dark:#C99076;"> --version</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#A0ADA0;--shiki-dark:#758575DD;"># 使用cargo创建项目</span></span>
<span class="line"><span style="--shiki-light:#59873A;--shiki-dark:#80A665;">cargo</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;"> new</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;"> xxxx</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#A0ADA0;--shiki-dark:#758575DD;"># 注意：git 是一个常用的版本控制系统（version control system，VCS）。可以通过 --vcs 参数使 cargo new 切换到其它版本控制系统（VCS），或者不使用 VCS。运行 cargo new --help 查看可用的选项。</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#A0ADA0;--shiki-dark:#758575DD;"># 构建 Cargo 项目</span></span>
<span class="line"><span style="--shiki-light:#A0ADA0;--shiki-dark:#758575DD;"># 会创建一个可执行文件 target/debug/hello_cargo （在 Windows 上是 target\\debug\\hello_cargo.exe），而不是放在目前目录下。由于默认的构建方法是调试构建（debug build），Cargo 会将可执行文件放在名为 debug 的目录中。可以通过这个命令运行可执行文件：./target/debug/xxxx</span></span>
<span class="line"><span style="--shiki-light:#59873A;--shiki-dark:#80A665;">cargo</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;"> build</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#A0ADA0;--shiki-dark:#758575DD;"># 运行 Cargo 项目</span></span>
<span class="line"><span style="--shiki-light:#A0ADA0;--shiki-dark:#758575DD;"># 并没有重新构建，而是直接运行了二进制文件</span></span>
<span class="line"><span style="--shiki-light:#59873A;--shiki-dark:#80A665;">cargo</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;"> run</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#A0ADA0;--shiki-dark:#758575DD;"># 在不生成二进制文件的情况下快速检查代码确保其可以编译</span></span>
<span class="line"><span style="--shiki-light:#59873A;--shiki-dark:#80A665;">cargo</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;"> check</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#A0ADA0;--shiki-dark:#758575DD;"># 优化编译项目</span></span>
<span class="line"><span style="--shiki-light:#A0ADA0;--shiki-dark:#758575DD;"># 在 target/release 而不是 target/debug 下生成可执行文件</span></span>
<span class="line"><span style="--shiki-light:#59873A;--shiki-dark:#80A665;">cargo</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;"> build</span><span style="--shiki-light:#A65E2B;--shiki-dark:#C99076;"> --release</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#A0ADA0;--shiki-dark:#758575DD;"># 升级，会忽略Cargo.lock，并计算Cargo.toml声明的最新版本</span></span>
<span class="line"><span style="--shiki-light:#59873A;--shiki-dark:#80A665;">cargo</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;"> update</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#A0ADA0;--shiki-dark:#758575DD;"># 构建所有本地依赖提供的文档并在浏览器打开（我勒个都，这个是真不错啊，省的自己去找文档）</span></span>
<span class="line"><span style="--shiki-light:#59873A;--shiki-dark:#80A665;">cargo</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;"> doc</span><span style="--shiki-light:#A65E2B;--shiki-dark:#C99076;"> --open</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><div class="language-toml line-numbers-mode" data-highlighter="shiki" data-ext="toml" style="--shiki-light:#393a34;--shiki-dark:#dbd7caee;--shiki-light-bg:#ffffff;--shiki-dark-bg:#121212;"><pre class="shiki shiki-themes vitesse-light vitesse-dark vp-code"><code class="language-toml"><span class="line"><span style="--shiki-light:#999999;--shiki-dark:#666666;">[</span><span style="--shiki-light:#59873A;--shiki-dark:#80A665;">package</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">]</span><span style="--shiki-light:#B31D28;--shiki-light-font-style:italic;--shiki-dark:#FDAEB7;--shiki-dark-font-style:italic;">  // 是一个片段 section 标题，表明下面的语句用来配置一个包。随着我们在这个文件增加更多的信息，还将增加其他 section。</span></span>
<span class="line"><span style="--shiki-light:#B07D48;--shiki-dark:#BD976A;">name</span><span style="--shiki-light:#999999;--shiki-dark:#666666;"> =</span><span style="--shiki-light:#B5695977;--shiki-dark:#C98A7D77;"> &quot;</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;">xxxx</span><span style="--shiki-light:#B5695977;--shiki-dark:#C98A7D77;">&quot;</span></span>
<span class="line"><span style="--shiki-light:#B07D48;--shiki-dark:#BD976A;">version</span><span style="--shiki-light:#999999;--shiki-dark:#666666;"> =</span><span style="--shiki-light:#B5695977;--shiki-dark:#C98A7D77;"> &quot;</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;">0.1.0</span><span style="--shiki-light:#B5695977;--shiki-dark:#C98A7D77;">&quot;</span></span>
<span class="line"><span style="--shiki-light:#B07D48;--shiki-dark:#BD976A;">edition</span><span style="--shiki-light:#999999;--shiki-dark:#666666;"> =</span><span style="--shiki-light:#B5695977;--shiki-dark:#C98A7D77;"> &quot;</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;">2024</span><span style="--shiki-light:#B5695977;--shiki-dark:#C98A7D77;">&quot;</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#999999;--shiki-dark:#666666;">[</span><span style="--shiki-light:#59873A;--shiki-dark:#80A665;">dependencies</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">]</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,8))])}const A=d(g,[["render",u]]),b=JSON.parse('{"path":"/rust/3t3w72a1/","title":"快速上手","lang":"zh-CN","frontmatter":{"title":"快速上手","createTime":"2025/09/10 19:16:36","permalink":"/rust/3t3w72a1/","watermark":true},"readingTime":{"minutes":2.44,"words":732},"git":{"createdTime":1757506276000,"updatedTime":1758027076000,"contributors":[{"name":"yevachenchen","username":"yevachenchen","email":"yevachenchen@didiglobal.com","commits":3,"avatar":"https://avatars.githubusercontent.com/yevachenchen?v=4","url":"https://github.com/yevachenchen"}]},"filePathRelative":"notes/rust/quickstart.md","headers":[]}');export{A as comp,b as data};
