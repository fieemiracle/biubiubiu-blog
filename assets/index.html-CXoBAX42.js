import{_ as i,c as a,e as n,o as e}from"./app-Bo1vGDNN.js";const l={};function h(t,s){return e(),a("div",null,[...s[0]||(s[0]=[n(`<h1 id="前言" tabindex="-1"><a class="header-anchor" href="#前言"><span>前言</span></a></h1><p>在软件开发的江湖中，若是说编程语言是各路高手的武功招式，那么<code>Git</code>便是那平平无奇、实则至关重要的“内功心法”。 相信每位程序员最熟悉的自然是这套“三板斧”：</p><div class="hint-container tip"><p class="hint-container-title">三板斧</p><div class="language-shell line-numbers-mode" data-highlighter="shiki" data-ext="shell" style="--shiki-light:#393a34;--shiki-dark:#dbd7caee;--shiki-light-bg:#ffffff;--shiki-dark-bg:#121212;"><pre class="shiki shiki-themes vitesse-light vitesse-dark vp-code"><code class="language-shell"><span class="line"><span style="--shiki-light:#59873A;--shiki-dark:#80A665;">git</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;"> add</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;"> .</span></span>
<span class="line"><span style="--shiki-light:#59873A;--shiki-dark:#80A665;">git</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;"> commit</span><span style="--shiki-light:#A65E2B;--shiki-dark:#C99076;"> -m</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;"> xxxx</span></span>
<span class="line"><span style="--shiki-light:#59873A;--shiki-dark:#80A665;">git</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;"> push</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></div><p>然而，作为一名合格的程序员，对Git的认知当然不能只是止步于此。<code>Git</code>就像一个程序员每日驾驶却从未打开过引擎盖的跑车——知道它能跑，却不知道它究竟有多强的性能。当遇到复杂的路况（紧急Bug修复）、需要炫技的场合（优雅地合并代码）、或是倒车失误时（错误代码回滚），你就会发现，仅仅会“踩油门和刹车”是远远不够的。</p><h1 id="常见情景应对招式" tabindex="-1"><a class="header-anchor" href="#常见情景应对招式"><span>常见情景应对招式</span></a></h1><h2 id="关联远程仓库" tabindex="-1"><a class="header-anchor" href="#关联远程仓库"><span>关联远程仓库</span></a></h2><p>1、需求：（1）新项目（2）指定主分支（3）关联指定远程仓库</p><p>2、解决：</p><div class="hint-container tip"><p class="hint-container-title">关联远程仓库</p><div class="language-shell line-numbers-mode" data-highlighter="shiki" data-ext="shell" style="--shiki-light:#393a34;--shiki-dark:#dbd7caee;--shiki-light-bg:#ffffff;--shiki-dark-bg:#121212;"><pre class="shiki shiki-themes vitesse-light vitesse-dark vp-code"><code class="language-shell"><span class="line"><span style="--shiki-light:#59873A;--shiki-dark:#80A665;">git</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;"> status</span></span>
<span class="line"><span style="--shiki-light:#59873A;--shiki-dark:#80A665;">git</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;"> init</span></span>
<span class="line"><span style="--shiki-light:#59873A;--shiki-dark:#80A665;">git</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;"> add</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;"> .</span></span>
<span class="line"><span style="--shiki-light:#59873A;--shiki-dark:#80A665;">git</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;"> commit</span><span style="--shiki-light:#A65E2B;--shiki-dark:#C99076;"> -m</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;"> xxxx</span></span>
<span class="line"><span style="--shiki-light:#59873A;--shiki-dark:#80A665;">git</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;"> branch</span><span style="--shiki-light:#A65E2B;--shiki-dark:#C99076;"> -M</span><span style="--shiki-light:#AB5959;--shiki-dark:#CB7676;"> &lt;</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;">指定分支</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">名</span><span style="--shiki-light:#AB5959;--shiki-dark:#CB7676;">&gt;</span></span>
<span class="line"><span style="--shiki-light:#59873A;--shiki-dark:#80A665;">git</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;"> push</span><span style="--shiki-light:#A65E2B;--shiki-dark:#C99076;"> -u</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;"> origin</span><span style="--shiki-light:#AB5959;--shiki-dark:#CB7676;"> &lt;</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;">指定分支</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">名</span><span style="--shiki-light:#AB5959;--shiki-dark:#CB7676;">&gt;</span><span style="--shiki-light:#A0ADA0;--shiki-dark:#758575DD;"> # --force（可选）首次提交需要带上</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></div><h2 id="瞒天过海" tabindex="-1"><a class="header-anchor" href="#瞒天过海"><span>瞒天过海</span></a></h2><h3 id="场景-1" tabindex="-1"><a class="header-anchor" href="#场景-1"><span>场景-1</span></a></h3><p>1、需求：不小心提交了node_modules，以及推送到远程仓库了，怎么从Git历史记录中移除呢，怎么从远程仓库中移除node_modules呢？ 2、解决：</p><div class="hint-container tip"><p class="hint-container-title">删除指定commit</p><div class="language-shell line-numbers-mode" data-highlighter="shiki" data-ext="shell" style="--shiki-light:#393a34;--shiki-dark:#dbd7caee;--shiki-light-bg:#ffffff;--shiki-dark-bg:#121212;"><pre class="shiki shiki-themes vitesse-light vitesse-dark vp-code"><code class="language-shell"><span class="line"><span style="--shiki-light:#59873A;--shiki-dark:#80A665;">git</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;"> status</span></span>
<span class="line"><span style="--shiki-light:#59873A;--shiki-dark:#80A665;">git</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;"> ls-files</span><span style="--shiki-light:#AB5959;--shiki-dark:#CB7676;"> |</span><span style="--shiki-light:#59873A;--shiki-dark:#80A665;"> grep</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;"> node_modules</span><span style="--shiki-light:#A0ADA0;--shiki-dark:#758575DD;"> # 检查是否已经提交node_modules</span></span>
<span class="line"><span style="--shiki-light:#A0ADA0;--shiki-dark:#758575DD;"># 这里需要创建.gitignore文件，并且把文件push</span></span>
<span class="line"><span style="--shiki-light:#59873A;--shiki-dark:#80A665;">vim</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;"> .gitignore</span></span>
<span class="line"><span style="--shiki-light:#59873A;--shiki-dark:#80A665;">git</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;"> rm</span><span style="--shiki-light:#A65E2B;--shiki-dark:#C99076;"> -r</span><span style="--shiki-light:#A65E2B;--shiki-dark:#C99076;"> --cached</span><span style="--shiki-light:#AB5959;--shiki-dark:#CB7676;"> &lt;</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;">node_modules的路</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">径</span><span style="--shiki-light:#AB5959;--shiki-dark:#CB7676;">&gt;</span><span style="--shiki-light:#A0ADA0;--shiki-dark:#758575DD;"> # 从缓存移除目录</span></span>
<span class="line"><span style="--shiki-light:#59873A;--shiki-dark:#80A665;">git</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;"> commit</span><span style="--shiki-light:#A65E2B;--shiki-dark:#C99076;"> -m</span><span style="--shiki-light:#AB5959;--shiki-dark:#CB7676;"> &lt;</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;">提交描</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">述</span><span style="--shiki-light:#AB5959;--shiki-dark:#CB7676;">&gt;</span></span>
<span class="line"><span style="--shiki-light:#59873A;--shiki-dark:#80A665;">git</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;"> ls-files</span><span style="--shiki-light:#AB5959;--shiki-dark:#CB7676;"> |</span><span style="--shiki-light:#59873A;--shiki-dark:#80A665;"> grep</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;"> node_modules</span><span style="--shiki-light:#A0ADA0;--shiki-dark:#758575DD;"> # 再次检查</span></span>
<span class="line"><span style="--shiki-light:#59873A;--shiki-dark:#80A665;">git</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;"> push</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></div><h3 id="场景-2" tabindex="-1"><a class="header-anchor" href="#场景-2"><span>场景-2</span></a></h3><p>1、需求：在修复一个bug问题中，由于在本地测试未测出隐藏bug，光修复该bug就提了好几个<code>commit</code>，在最后一次提交<code>commit</code>时，不想保留前面的提交记录 2、解决：</p><div class="hint-container tip"><p class="hint-container-title">撤销多个commit</p><div class="language-shell line-numbers-mode" data-highlighter="shiki" data-ext="shell" style="--shiki-light:#393a34;--shiki-dark:#dbd7caee;--shiki-light-bg:#ffffff;--shiki-dark-bg:#121212;"><pre class="shiki shiki-themes vitesse-light vitesse-dark vp-code"><code class="language-shell"><span class="line"><span style="--shiki-light:#A0ADA0;--shiki-dark:#758575DD;"># 前提：该项目时个人开发项目或者pull拉取最新代码，确保无他人提交记录</span></span>
<span class="line"><span style="--shiki-light:#A0ADA0;--shiki-dark:#758575DD;"># （1）本地撤销前面的提交记录（可以手动在vscode或其他支持git操作的编译器手动回退）</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#A0ADA0;--shiki-dark:#758575DD;"># （2）使用命令的话 需要确定基于哪个commit变更（例如是 abc123）</span></span>
<span class="line"><span style="--shiki-light:#59873A;--shiki-dark:#80A665;">git</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;"> rebase</span><span style="--shiki-light:#A65E2B;--shiki-dark:#C99076;"> -i</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;"> abc123</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#A0ADA0;--shiki-dark:#758575DD;"># 重新提交</span></span>
<span class="line"><span style="--shiki-light:#59873A;--shiki-dark:#80A665;">git</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;"> add</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;"> .</span></span>
<span class="line"><span style="--shiki-light:#59873A;--shiki-dark:#80A665;">git</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;"> commit</span><span style="--shiki-light:#A65E2B;--shiki-dark:#C99076;"> -m</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;"> xxxx</span></span>
<span class="line"><span style="--shiki-light:#59873A;--shiki-dark:#80A665;">git</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;"> push</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;"> origin</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;"> xxxx</span><span style="--shiki-light:#A65E2B;--shiki-dark:#C99076;"> --force</span><span style="--shiki-light:#A0ADA0;--shiki-dark:#758575DD;"> # 或--force-with-lease</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></div><h2 id="尾声" tabindex="-1"><a class="header-anchor" href="#尾声"><span>尾声</span></a></h2><p>未完🤣😄😅</p>`,18)])])}const p=i(l,[["render",h]]),d=JSON.parse('{"path":"/article/nlaid6jz/","title":"Git常见场景","lang":"zh-CN","frontmatter":{"title":"Git常见场景","tags":["git"],"createTime":"2025/09/10 17:49:52","permalink":"/article/nlaid6jz/","watermark":true},"readingTime":{"minutes":2.11,"words":633},"git":{"createdTime":1757498629000,"updatedTime":1757498629000,"contributors":[{"name":"yevachenchen","username":"yevachenchen","email":"yevachenchen@didiglobal.com","commits":1,"avatar":"https://avatars.githubusercontent.com/yevachenchen?v=4","url":"https://github.com/yevachenchen"}]},"filePathRelative":"preview/git-record.md","headers":[],"categoryList":[{"id":"5ebeb6","sort":10003,"name":"preview"}]}');export{p as comp,d as data};
